FROM golang:1.11.1-alpine3.8 AS builder

ARG VERSION
ENV VERSION=${VERSION}
ARG GIT_COMMIT
ENV GIT_COMMIT=${GIT_COMMIT}
ARG CUR_TIME
ENV CUR_TIME=${CUR_TIME}

RUN mkdir -p /app/src
WORKDIR /app/src

RUN apk update && apk upgrade && \
  apk add --no-cache bash git openssh ca-certificates tzdata curl bzr bash-completion gcc musl-dev \
  icu icu-libs icu-dev sed grep bc coreutils

COPY ./netrc /root/.netrc
COPY . /app/src

RUN go get ./...
RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -a -installsuffix cgo -tags netgo -ldflags "-s -w -X main.release=${VERSION} -X main.Commit=${GIT_COMMIT} -X main.BuildTime=${CUR_TIME}" .
RUN mkdir -p /etc/bash_completion.d
RUN ./{{ .AppName }} --bash-completion

FROM alpine:3.8
MAINTAINER OLEG DOLYA <oleg.dolya@gmail.com>

ENV PORT 50000
#ENV HOST "0.0.0.0"
ENV NODE_ENV: production
ENV CONSUL_HTTP_ADDR "172.17.0.1:8500"
ENV LOG_LEVEL 0

#EXPOSE ${PORT}

RUN mkdir -p /app/bin
RUN mkdir -p /app/config
RUN mkdir -p /etc/bash_completion.d
WORKDIR /app

ENV PATH /app:$PATH

COPY ./bashrc /root/.bashrc
#COPY ./bashrc /app/.bashrc

RUN apk update && apk upgrade && apk add --no-cache ca-certificates tzdata curl bash bash-completion sed grep bc coreutils
# icu icu-libs icu-dev
RUN sed -i -e "s/bin\/ash/bin\/bash/" /etc/passwd
#RUN ln -fs /usr/share/zoneinfo/Europe/Kiev /etc/localtime

#RUN locale-gen en_US.UTF-8
#ENV LANG=en_US.UTF-8 \
#    LANGUAGE=en_US.UTF-8 \
#    LC_CTYPE=en_US.UTF-8 \
#    LC_ALL=en_US.UTF-8
#ENV LC_ALL=en_US.UTF-8

COPY ./{{ .ConfigFileName }}.json /app/{{ .ConfigFileName }}.json
COPY --from=builder /etc/bash_completion.d/{{ .AppName }}.bash /etc/bash_completion.d/{{ .AppName }}.bash
COPY --from=builder /app/src/{{ .AppName }} /app/{{ .AppName }}

CMD ["/app/{{ .AppName }}"]
